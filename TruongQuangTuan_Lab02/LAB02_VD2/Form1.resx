<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nvoAAAAASUVORK5CYII=
</value>
  </data>
</root>